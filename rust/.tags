!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	D:/pepe/Documentos/proyectos/sync/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	5.9.0	/e053bcd0/
Caracteristicas	README.md	/^# Caracteristicas$/;"	c
Config	src/main.rs	/^struct Config {$/;"	s
Dirs	src/main.rs	/^struct Dirs {$/;"	s
General	src/main.rs	/^struct General {$/;"	s
Requisitos	README.md	/^# Requisitos$/;"	c
Sync	README.md	/^# Sync$/;"	c
Uso de logging	README.md	/^## Uso de logging$/;"	s	chapter:Sync
build_cli	src/main.rs	/^fn build_cli() -> App<'static> {$/;"	f
current_exe_dir	src/main.rs	/^fn current_exe_dir() -> PathBuf {$/;"	f
dir_bash	src/main.rs	/^    dir_bash: String,$/;"	m	struct:General
dir_bash	sync.ini	/^dir_bash = "db"$/;"	k	section:general
dir_data	src/main.rs	/^    dir_data: String,$/;"	m	struct:General
dir_data	sync.ini	/^dir_data = "dd"$/;"	k	section:general
dir_home	src/main.rs	/^    dir_home: String,$/;"	m	struct:General
dirs	src/main.rs	/^    dirs: Dirs,$/;"	m	struct:Config
dirs	sync.ini	/^[dirs]$/;"	s
dirs_link	src/main.rs	/^   dirs_link: Vec<[String; 3]>, $/;"	m	struct:Dirs
dirs_link	sync.ini	/^dirs_link = [["dl","",""]] $/;"	k	section:dirs
dirs_not_exist	src/main.rs	/^   dirs_not_exist: Vec<String>,$/;"	m	struct:Dirs
dirs_not_exist	sync.ini	/^dirs_not_exist = ["dne"]$/;"	k	section:dirs
file_logging	src/main.rs	/^    file_logging: String,$/;"	m	struct:General
file_logging	sync.ini	/^file_logging = "fl"$/;"	k	section:general
general	src/main.rs	/^    general: General,$/;"	m	struct:Config
general	sync.ini	/^[general]$/;"	s
get_ini_file	src/main.rs	/^fn get_ini_file() -> Result<Config, Error> {$/;"	f
init_logger	src/main.rs	/^fn init_logger() {$/;"	f
it_works	src/main.rs	/^    fn it_works() { assert_eq!(2 + 2, 4); }$/;"	f	module:tests
load_ini_file	src/main.rs	/^fn load_ini_file() -> Result<Config, Error> {$/;"	f
main	src/main.rs	/^fn main() -> Result<(), fslock::Error> {$/;"	f
main	src/main.rs	/^fn main() {$/;"	f
main1	src/main.rs	/^fn main1() -> Result<(), fslock::Error> {$/;"	f
parse_argv	src/main.rs	/^fn parse_argv() -> App<'static> {$/;"	f
parse_argv	src/main.rs	/^fn parse_argv() -> clap::ArgMatches<'static> {$/;"	f
str	src/main.rs	/^const APPNAME: &'static str = env!("CARGO_PKG_NAME");$/;"	v
str	src/main.rs	/^const AUTOR: &'static str = env!("CARGO_PKG_AUTHORS");$/;"	v
str	src/main.rs	/^const DESCRIPTION: &'static str = env!("CARGO_PKG_DESCRIPTION");$/;"	v
str	src/main.rs	/^const INI_FILE: &'static str = "sync.ini";$/;"	v
str	src/main.rs	/^const LOCK_FILE: &'static str = "sync.lock";$/;"	v
str	src/main.rs	/^const VERSION: &'static str = env!("CARGO_PKG_VERSION");$/;"	v
test_ini_file	src/main.rs	/^fn test_ini_file() -> Result<(), Error> {$/;"	f
tests	src/main.rs	/^mod tests {$/;"	n
