#+TITLE: syncb.sh - Sincronizaci√≥n Bidireccional con pCloud
#+AUTHOR: Autom√°tico
#+DATE: Generado el $(date +%Y-%m-%d)

* Descripci√≥n
Script avanzado de sincronizaci√≥n bidireccional entre directorio local y pCloud Drive con capacidades de backup, manejo de enlaces simb√≥licos y sistema de logging.

* Caracter√≠sticas Principales
- Sincronizaci√≥n bidireccional (subir/bajar)
- Manejo de enlaces simb√≥licos
- Sistema de locking para ejecuciones simult√°neas
- Verificaci√≥n de espacio en disco
- Modo dry-run y verbose
- Rotaci√≥n autom√°tica de logs
- Compatibilidad con macOS y Linux
- Soporte para m√∫ltiples configuraciones por hostname
- Notificaciones del sistema al finalizar (Linux/macOS)
- Estad√≠sticas detalladas de rendimiento
- Verificaci√≥n de conectividad con pCloud
- Soporte para m√∫ltiples --item y --exclude
- L√≠mite de tiempo por operaci√≥n (timeout)
- Detecci√≥n autom√°tica de FQDN del host
- Validaci√≥n de rutas para prevenir path traversal
- Sistema de timeout por operaci√≥n individual
- Registro detallado de enlaces simb√≥licos

* Requisitos
- Bash 4.0+
- rsync
- pCloud Drive montado localmente
- Herramientas b√°sicas: grep, awk, find, stat
- Opcional: ~curl~ para verificaci√≥n de conectividad
- Opcional: ~notify-send~ (Linux) o ~osascript~ (macOS) para notificaciones
- Opcional: ~timeout~ y ~stdbuf~ para gesti√≥n de tiempos de espera
- Opcional: ~realpath~ o ~readlink~ para normalizaci√≥n de rutas

* Instalaci√≥n
1. Guardar el script en un directorio del PATH
2. Hacer ejecutable:
   #+BEGIN_SRC shell
   chmod +x syncb.sh
   #+END_SRC
3. Configurar los archivos de configuraci√≥n (ver secci√≥n Configuraci√≥n)
4. Configurar variables de entorno si es necesario (PCLOUD_MOUNT_POINT, LOCAL_DIR, LOG_FILE)

* Configuraci√≥n

** Archivos de Configuraci√≥n
El script busca estos archivos en el directorio del script o directorio actual:

- ~syncb_directorios.ini~ :: Lista principal de elementos a sincronizar
- ~syncb_directorios_<hostname>.ini~ :: Configuraci√≥n espec√≠fica por host
- ~syncb_exclusiones.ini~ :: Patrones de exclusi√≥n para rsync

** Variables de Entorno
El script usa estas variables configurables:

- ~PCLOUD_MOUNT_POINT~ :: Punto de montaje de pCloud (por defecto: ~$HOME/pCloudDrive~)
- ~LOCAL_DIR~ :: Directorio local a sincronizar (por defecto: ~$HOME~)
- ~LOG_FILE~ :: Archivo de log (por defecto: ~$HOME/syncb.log~)
- ~HOSTNAME_RTVA~ :: Nombre de host espec√≠fico para configuraci√≥n especial (por defecto: feynman.rtva.dnf)

* Uso

** Sintaxis B√°sica
#+BEGIN_SRC shell
syncb.sh [--subir|--bajar] [OPCIONES]
#+END_SRC

** Opciones Principales
| Opci√≥n          | Descripci√≥n                                                                 |
|-----------------|-----------------------------------------------------------------------------|
| --subir         | Sincroniza local ‚Üí pCloud                                                   |
| --bajar         | Sincroniza pCloud ‚Üí local                                                   |
| --delete        | Elimina archivos obsoletos en destino                                       |
| --dry-run       | Simula sin hacer cambios reales                                             |
| --item ELEMENTO | Sincroniza solo el elemento especificado                                    |
| --exclude PATRON| Excluye archivos que coincidan con el patr√≥n (puede usarse m√∫ltiples veces) |
| --yes           | Ejecuta sin confirmaci√≥n                                                    |
| --backup-dir    | Usa directorio de backup de solo lectura                                    |
| --overwrite     | Sobrescribe archivos en destino                                             |
| --checksum      | Usa checksum para comparaci√≥n (m√°s lento)                                   |
| --bwlimit KB/s  | Limita velocidad de transferencia                                           |
| --timeout MIN   | L√≠mite de tiempo por operaci√≥n (default: 30)                                |
| --force-unlock  | Fuerza eliminaci√≥n de lock obsoleto                                         |
| --verbose       | Habilita modo verboso                                                       |
| --test          | Ejecuta tests unitarios                                                     |
| --help          | Muestra ayuda detallada                                                     |

** Ejemplos Comunes

*** Sincronizaci√≥n normal
#+BEGIN_SRC shell
# Subir cambios a pCloud
syncb.sh --subir

# Bajar cambios desde pCloud
syncb.sh --bajar
#+END_SRC

*** Sincronizaci√≥n con eliminaci√≥n
#+BEGIN_SRC shell
# Subir y eliminar archivos obsoletos
syncb.sh --subir --delete --yes
#+END_SRC

*** Sincronizaci√≥n de elemento espec√≠fico
#+BEGIN_SRC shell
# Sincronizar solo un directorio espec√≠fico
syncb.sh --subir --item Documentos/ --dry-run
#+END_SRC

*** Sincronizaci√≥n con l√≠mites
#+BEGIN_SRC shell
# Con l√≠mite de velocidad y tiempo
syncb.sh --bajar --bwlimit 1000 --timeout 10
#+END_SRC

*** Sincronizaci√≥n con exclusi√≥n de patrones
#+BEGIN_SRC shell
# Excluir archivos temporales y directorio temp
syncb.sh --subir --exclude '*.tmp' --exclude 'temp/'
#+END_SRC

*** Sincronizaci√≥n forzada
#+BEGIN_SRC shell
# Sobrescribir todos los archivos y usar checksum
syncb.sh --subir --overwrite --checksum
#+END_SRC

*** Forzar desbloqueo
#+BEGIN_SRC shell
# Eliminar lock de ejecuci√≥n previa
syncb.sh --force-unlock
#+END_SRC

*** Ejecutar tests
#+BEGIN_SRC shell
# Ejecutar tests unitarios
syncb.sh --test
#+END_SRC

* Manejo de Enlaces Simb√≥licos
El script gestiona enlaces simb√≥licos mediante un archivo metadato (~.syncb_symlinks.meta~) que:
1. Se crea durante la subida con informaci√≥n de enlaces
2. Se usa durante la bajada para recrear enlaces

Los enlaces que apuntan fuera del directorio home se normalizan para usar ~$USERNAME~.
 
El proceso de manejo de enlaces incluye:
1. Detecci√≥n de enlaces durante la subida
2. Normalizaci√≥n de rutas para portabilidad
3. Registro en archivo de metadatos
4. Recreaci√≥n durante la bajada con validaci√≥n de seguridad

* Sistema de Notificaciones
El script env√≠a notificaciones del sistema al finalizar:
- Linux: mediante ~notify-send~
- macOS: mediante ~osascript~
- Fallback: mensaje en terminal con emoji (üîî)
- Diferentes niveles de urgencia (info, warning, critical)

* Sistema de Locking
El script implementa locking para prevenir ejecuciones simult√°neas:
- Lock file: ~/tmp/syncb.lock~
- Timeout autom√°tico: 1 hora
- Forzar desbloqueo: ~--force-unlock~
- Informaci√≥n detallada del proceso due√±o del lock
- Eliminaci√≥n autom√°tica de locks obsoletos

* Logging y Monitoreo
- Log principal: ~$HOME/syncb.log~
- Rotaci√≥n autom√°tica al alcanzar 10MB
- Formatos de mensaje coloreados en terminal
- Estad√≠sticas detalladas al finalizar
- Notificaciones del sistema al finalizar (√©xito/error)
- Mensajes con timestamp y niveles de severidad
- Informaci√≥n de debugging en modo verboso

* Troubleshooting

** Error: Punto de montaje no encontrado
Verificar que pCloud Drive est√© instalado y montado en ~$HOME/pCloudDrive~

** Error: Lock existente
#+BEGIN_SRC shell
# Forzar eliminaci√≥n de lock
syncb.sh --force-unlock
#+END_SRC

** Error: Espacio insuficiente
El script verifica espacio pero puede necesitar m√°s del estimado

** Error: Sin conectividad
El script verifica conectividad con pCloud. Si falla, se muestra advertencia.

** Modo verboso para debugging
#+BEGIN_SRC shell
syncb.sh --subir --verbose --dry-run
#+END_SRC

** Error: Path traversal detectado
El script valida todas las rutas para prevenir ataques de path traversal.
Verificar que los elementos en la lista de sincronizaci√≥n no contengan ~..~
 
** Error: Tiempo excedido en operaci√≥n
#+BEGIN_SRC shell
# Aumentar timeout o investigar rendimiento
syncb.sh --bajar --timeout 60
#+END_SRC

* Tests Unitarios
Ejecutar tests de validaci√≥n:
#+BEGIN_SRC shell
syncb.sh --test
#+END_SRC
 
Los tests verifican:
- Normalizaci√≥n de rutas
- Construcci√≥n de opciones de rsync
- Detecci√≥n de argumentos duplicados
- Resoluci√≥n de items relativos
- Verificaci√≥n de espacio en disco

* Rendimiento y Optimizaci√≥n
El script incluye varias optimizaciones:
- L√≠mite de bandwidth configurable (~--bwlimit~)
- Timeout por operaci√≥n para evitar bloqueos
- Sincronizaci√≥n con ~--whole-file~ para mejor rendimiento en redes locales
- Modo ~--checksum~ para verificaci√≥n precisa (a costa de rendimiento)
- Procesamiento por elementos individuales con estad√≠sticas
- Buffering de salida para mejorar rendimiento de logging

* Limitaciones Conocidas
- No soporta sincronizaci√≥n contin√∫a (solo por ejecuci√≥n)
- El manejo de enlaces simb√≥licos complejos puede fallar
- No comprime datos durante transferencia
- Timeout por operaci√≥n, no global
- Dependencia de herramientas externas (rsync, find, etc.)
- El manejo de archivos con espacios puede requerir atenci√≥n especial

* Seguridad
- Verificaci√≥n de rutas para prevenir path traversal
- Validaci√≥n de permisos de escritura
- Sanitizaci√≥n de entradas (en desarrollo)
- Verificaci√≥n de que los elementos est√°n dentro del directorio home
- Normalizaci√≥n de rutas para evitar directory traversal
- Validaci√≥n de todos los argumentos y elementos de configuraci√≥n

* Mantenimiento
El script incluye funcionalidades autom√°ticas de mantenimiento:
- Rotaci√≥n de logs
- Limpieza de archivos temporales
- Verificaci√≥n de dependencias
- Tests unitarios integrados
- Sistema de logging autocontenido

* Soporte
Para problemas o mejoras, contactar con el mantenedor del script.
 
** Depuraci√≥n avanzada
Para debugging detallado, ejecutar con modo verboso:
#+BEGIN_SRC shell
syncb.sh --subir --verbose 2>&1 | tee debug.log
#+END_SRC

